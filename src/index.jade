mixin slide(names, slideClasses)
  if names
    section(class=names+' '+slideClasses, data-bespoke-backdrop='backdrop ' + names.split(' ').map(function(name) { return 'backdrop--' + name; }).join(' '))
      block
  else
    section
      block

doctype html
html
  head
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
  title Dockerized system testing, with a dash of chaos

  link(rel='stylesheet', type='text/css', href='build/build.css')
  link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')

  body

    article

      +slide('main')
       
      +slide('title')
        h2.title Dockerized system testing
        h3 <span class='important' style='font-size:1.5em; letter-spacing: 0.1em;'>with a dash of chaos</span>
        i.goldColor.smallstoketitle.fa.fa-twitter-square <span class='gothicfont' style='color: gold; font-size:1.2em; letter-spacing: 0.05em;'>&nbsp;majson &nbsp;</span>
        i.goldColor.smallstoketitle.fa.fa-twitter-square <span class='gothicfont' style='color: gold; font-size:1.2em; letter-spacing: 0.05em;'>&nbsp;aslakknutsen &nbsp;</span>
      
      +slide('mac')
        h1.small <span class='important'>Software</span> is eating the <span class='important'>world</span>
        aside(role='note') Every business is in the sw business, even landed ni traditional business Uber, AirBnb, JustEat

      +slide
        img.schemash(src='images/airport.png')

      +slide
        img.schemash(src='images/casino.png')

      +slide('test')
        h2.gothicfont <span class='important'>Automatic Tests</span> as Solution
        aside(role='note') Unit, Integration, Component, Contract, Security, e2e

      +slide('unittt')
        h2.gothicfont Unit tests <span class='important'>are not enough</span>
        aside(role='note') TDD, 100%coverage, but when you deploy, JPA, container features

      +slide('contract')
        h2.gothicfont <span class='important'>Sociable</span> Unit Tests

      +slide('indy')
        h2.gothicfont Will it Work in <span class='important'>Production</span> ?

      +slide('ci')
        h2.gothicfont <span class='important'>High-level Tests</span> Running in <br/> <span class='important'>Production-like</span> environment
        aside(role='note') Problem preparing containers, manual steps, maven plugin, debuging (embeded)
          
      +slide('arquillianf')
        
      +slide
        h2.gothicfont What is <span class='important'>Arquillian</span>?
        ul.lists
          li <span class='important'>Middleware</span> for your <span class='important'>tests</span>
          li Fills the <span class='important'>gap</span> between Unit/Integration tests
          li Child's play
          li Any kind of high-level tests
          li JavaEE and <span class='important'>beyond</span>
          li <span class='important'>Open Source</span>
        aside(role='note') Segon punt explicar lifecycle

      +slide
        h2.gothicfont.filegothic build.gradle
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            apply plugin: "io.spring.dependency-management"

            dependencyManagement {
              imports {
                mavenBom 'org.jboss.arquillian:arquillian-bom:1.1.10.Final'
              }
            } 
          br
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
              dependencies {
                testCompile group: 'org.jboss.arquillian.junit', name: 'arquillian-junit-container'
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
                &nbsp;&nbsp;testCompile 'org.apache.tomee:arquillian-tomee-remote:7.0.0'
                }
              
      +slide
        h2.gothicfont.filegothic PlanetsTest.java
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @RunWith(Arquillian.class)
            public class PlanetServiceAPITest {

          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@Deployment(testable = false)
            &nbsp;&nbsp;public static WebArchive createDeployment() {
            &nbsp;&nbsp;&nbsp;&nbsp;return ShrinkWrap.create(WebArchive.class)
                  .addClasses(SwapiGateway.class, PlanetService.class, ...)
                  .addAsResource("swapitest.properties", "swapi.properties");
            &nbsp;&nbsp;}
            
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@ArquillianResource
            &nbsp;&nbsp;URL url;
            
            &nbsp;&nbsp;@Test
            &nbsp;&nbsp;public void shouldReturnTheAverage() {
            &nbsp;&nbsp;&nbsp;&nbsp;final String average = RestAssured.get(url.toExternalForm() + 
                                      "rest/planet/orbital/average").asString();
            &nbsp;&nbsp;&nbsp;&nbsp;assertThat(average, is("1699.42"));
            &nbsp;&nbsp;}
            }

      +slide('puzzle')
        h2.gothicfont Demo
        
      +slide
        h2.gothicfont Principles of <span class='important'>Arquillian</span>?
        ul.lists
          li <span class='important'>Portable</span> tests
          li Executable from <span class='important'>IDE</span> and <span class='important'>buildtool</span>
          li <span class='important'>Reuse</span> exitsing frameworks
          li <span class='important'>Flexible</span> to adapt technologies
          li <span class='important'>Extensible</span> to new platforms
          li Ease of <span class='important'>deployment</span>
        aside(role='note') Maven importer

      +slide('whales')
        h2.gothicfont Docker
        aside(role='note') automates deployment of software containers

      +slide
        img.schemashh(style='width:75%;height:75%', src='images/dockerworkflow.png')
        aside(role='note') Arquillian Cube

      +slide('borg')
        h2.gothicfont Arquillian <span class='important'>Cube</span>
        aside(role='note') Arquillian extension for managing lifecycle

      +slide
        h2.gothicfont What is <span class='important'>Cube</span>?
        ul.lists
          li Manage lifecycle of <span class='important'>Docker</span> containers
          li Uses <span class='important'>Arquillian</span> remote adapters
          li <span class='important'>Orchestrate</span> containers
          li Support for <span class='important'>containerless</span> systems
          li Ready for <span class='important'>Docker Machine</span>
        aside(role='note') Docker machine means testing any platform with docker support
      
      +slide
        h2.gothicfont.filegothic build.gradle
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            dependencies {
              testCompile 'org.arquillian.cube:arquillian-cube-docker:1.0.0.Alpha11'
            }
          
      +slide
        h2.gothicfont.filegothic src/test/resources/arquillian.xml
        pre.small.language-xml
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            &lt;arquillian&gt;

              &lt;extension qualifier="docker"&gt;
                  &lt;property name="machineName"&gt;dev&lt;/property&gt;
                  &lt;property name="definitionFormat"&gt;COMPOSE&lt;/property&gt;
                  &lt;property name="dockerContainersFile"&gt;docker-compose.yml&lt;/property&gt;
              &lt;/extension&gt;
              
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;&lt;container qualifier="tomcat"&gt;
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;configuration&gt;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name="user"&gt;admin&lt;/property&gt;
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;property name="pass"&gt;mypass&lt;/property&gt;
            &nbsp;&nbsp;&nbsp;&nbsp;&lt;/configuration&gt;
            &nbsp;&nbsp;&lt;/container&gt;
            &lt;/arquillian&gt;
      
      +slide
        h2.gothicfont.filegothic docker-compose.yml
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            tomcat:
              env_file: envs
              image: tutum/tomcat:7.0
              ports:
                  - "8089:8089"
                  - "8088:8088"
                  - "8081:8080"
              links:
                  - pingpong:pingpong

              pingpong:
                image: jonmorehouse/ping-pong
                ports:
                  - "8080:8080"
      
      +slide
        h2.gothicfont.filegothic PingPongTest.java
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @RunWith(Arquillian.class)
            public class HelloWorldServletTest {

              @Deployment(testable=false)
              public static WebArchive create() {
                  return ShrinkWrap.create(WebArchive.class, "hello.war")
                      .addClass(HelloWorldServlet.class);
              }
              
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@HostIp
            &nbsp;&nbsp;String hostIp;

            &nbsp;&nbsp;@HostPort(containerName = "tomcat", value = 8080)
            &nbsp;&nbsp;int tomcatPort;
            
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@Test
            &nbsp;&nbsp;public void test(@ArquillianResource URL base) throws IOException {
            &nbsp;&nbsp;&nbsp;&nbsp;URL obj = new URL(base, "HelloWorld");
            &nbsp;&nbsp;}

      +slide('puzzle')
        h2.gothicfont Demo
            
      +slide('emptyship')
        h2.gothicfont Containerless
        aside(role='note') Previous demo the image must be created before test, want to use Shrinkwrap for containerless too (nodejs, ...)

      +slide
        h2.gothicfont What is <span class='important'>Containerless</span>?
        ul.lists
          li Runs any application that runs on <span class='important'>Docker</span>
          li Including but <span class='important'>not limited</span> Nodejs, Wildfly Swarm, Spring Boot, Vert.x, Go
          li <span class='important'>Shrinkwrap</span> support
        aside(role='note') Basically Shrinkwrap copies content into known location for docker build
      
      +slide
        h2.gothicfont.filegothic build.gradle
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            dependencies {
              testCompile 'org.arquillian.cube:arquillian-cube-containerless:1.0.0.Alpha11'
            }
      
      +slide
        h2.gothicfont.filegothic NodejsTest.java
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @RunWith(Arquillian.class)
            public class NodeTest {

                @Deployment(testable = false)
                public static GenericArchive createDeployment() {
                    return ShrinkWrap.create(GenericArchive.class, "app.tar")
                            .add(new FileAsset(new File("src/test/js/index.js")), "index.js")
                            .add(new FileAsset(new File("src/test/js/package.json")), "package.json");
                }

                @Test
                public void shouldReturnMessageFromNodeJs(@ArquillianResource URL base) {
                }
            }
      
      +slide
        h2.gothicfont.filegothic DockerfileTemplate
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            FROM node:0.11.14

            RUN mkdir -p /usr/src/app
            WORKDIR /usr/src/app

            ADD ${deployableFilename} /usr/src/app
            RUN npm install
            EXPOSE 8080

            CMD [ "npm", "start" ]
          
      +slide
        h2.gothicfont.filegothic docker-compose.yml
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            nodeexample:
              build: src/test/resources
              
      +slide
        h2.gothicfont.filegothic arquillian.xml
        pre.small.language-xml
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            &lt;extension qualifier="docker"&gt;
              &lt;property name="machineName"&gt;dev&lt;/property&gt;
            &lt;/extension&gt;
          
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &lt;container qualifier="containerless" default="true">
              &lt;configuration>
                &lt;property name="containerlessDocker"&gt;nodeexample&lt;/property&gt;
              &lt;/configuration&gt;
            &lt;/container&gt;
        aside(role='note') Explain lifecycle
      
      +slide('puzzle')
        h2.gothicfont Demo
                
      +slide('containerstack')
        h2.gothicfont <span class='important'>Container Object</span> pattern
        aside(role='note') Like Page Object (obj inmem representation)
      
      +slide
        h2.gothicfont What are <span class='important'>Container Objects</span>?
        ul.lists
          li <span class='important'>Encapsulate</span> containers (Operations and Configuration)
          li Single Responsibility
          li <span class='important'>Reuse</span>
         aside(role='note') JAR file for reuse (put in Classpath and thats all)
      
      +slide
        h2.gothicfont.filegothic ping-pong-container.jar
        pre.small.full-width.no-scroll.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @Cube(value = "pingpong", portBinding = "5000->8080/tcp")
            public class PingPongContainer {

          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@HostIp
            &nbsp;&nbsp;String dockerHost;

            &nbsp;&nbsp;@HostPort(8080)
            &nbsp;&nbsp;private int port;
              
            &nbsp;&nbsp;@ArquillianResource
            &nbsp;&nbsp;private DockerClient dockerClient;
              
            &nbsp;&nbsp;@CubeDockerFile
            &nbsp;&nbsp;public static Archive<?> createContainer() {
            &nbsp;&nbsp;&nbsp;&nbsp;String dockerDescriptor = Descriptors.create(DockerDescriptor.class)
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.from("jonmorehouse/ping-pong").exportAsString();
            &nbsp;&nbsp;&nbsp;&nbsp;return ShrinkWrap.create(GenericArchive.class)
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.add(new StringAsset(dockerDescriptor), "Dockerfile");
            &nbsp;&nbsp;}
            
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;public URL getConnectionURL() {
            &nbsp;&nbsp;&nbsp;&nbsp;URL url = new URL("http://" + dockerHost + ":" + port);
            &nbsp;&nbsp;}
            }
        aside(role='note') Dynamic dockerfile, or annotate class and find it in same package+classname, inner cubes
      
      +slide
        h2.gothicfont.filegothic PingPongTest.java
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @RunWith(Arquillian.class)
            public class PingPongTest {

              @Cube
              PingPongContainer pingPongContainer;
          
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@Test
            &nbsp;&nbsp;public void shouldReturnOkAsPong() throws IOException {
            &nbsp;&nbsp;&nbsp;&nbsp;String pong = ping(pingPongContainer.getConnectionUrl());
            &nbsp;&nbsp;&nbsp;&nbsp;assertThat(pong, containsString("OK"));
            &nbsp;&nbsp;}
            }
        aside(role='note') Classpath, Inject live PingPongContainer
      
      +slide
        h2.gothicfont.filegothic arquillian.xml
        pre.small.language-xml
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            &lt;extension qualifier="docker"&gt;
              &lt;property name="machineName"&gt;dev&lt;/property&gt;
            &lt;/extension&gt;
        aside(role='note') Using boot2docker or native you don't need anything at all
          
      +slide('puzzle')
        h2.gothicfont Demo
                    
      +slide('alexoh')
        h3 <b>The more we rely on being <span class='important'>online,</span></b> <br/> <b>the more <span class='important'>offline</span> support is needed..?</b>
      
      +slide('q')
        h2.gothicfont Arquillian <span class='important'>Cube Q</span>
        aside(role='note') Adding chaos to the system 
            
      +slide
        img.schemas(src='images/toxirewrite.png')

      +slide
        h2.gothicfont What is <span class='important'>Q</span>?
        ul.lists
          li Automatic redirect to <span class='important'>Toxic Proxy</span>
          li Toxicity
          li <span class='important'>Chaos</span> latency, bandwidth, down, slow_close, timeout, slicer 
          aside(role='note') Toxic the frontend service

      +slide
        h2.gothicfont.filegothic docker-compose.yml
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            helloworld:
              image: lordofthejars/helloworld
              ports:
                - "8081:8080"
              links:
                - pingpong:pingpong

            pingpong:
              image: jonmorehouse/ping-pong
              expose:
                  - "8080"
          
      +slide
        h2.gothicfont.filegothic build.gradle
        pre.small.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            dependencies {
              testCompile 'org.arquillian.cube.q:arquillian-cube-q-toxic:1.0.0.Alpha1'
            }
              
      +slide
        h2.gothicfont.filegothic ToxicFuntionalTestCase.java
        pre.small.full-width.language-javascript
          code.bullet.bespoke-bullet.bespoke-bullet-active.bespoke-bullet-current.
            @RunWith(Arquillian.class)
            public class ToxicFuntionalTestCase {

              @ArquillianResource
              private Q Q;

              @HostIp
              private String ip;
              
          br
          code.bullet.bespoke-bullet.bespoke-bullet-inactive.
            &nbsp;&nbsp;@Test
            &nbsp;&nbsp;public void shouldSurviveOnLatency() throws Exception {
            &nbsp;&nbsp;&nbsp;&nbsp;Q.on("pingpong", 8080).latency(4000, 0, () -> {
              
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;URL url = new URL("http://" + ip + ":" + 8081 + "/hw/HelloWorld");
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String response = IOUtil.asString(url.openStream());
              
            &nbsp;&nbsp;&nbsp;&nbsp;});
            &nbsp;&nbsp;}
            }

      +slide('puzzle')
        h2.gothicfont Demo
                        
      +slide('adathink')
        h2.gothicfont.smallgothic Let's <span class='important'>recap</span>

      +slide
        ul.lists
          li <span class='important'>Unit tests</span> are important
          li But test in <span class='important'>production-like</span> environment
          li <span class='important'>Arquillian</span> extensions
          li Be prepared for <span class='important'>Unexpected</span>
          li Arquillian works in <span class='important'>Non Java</span> projects
          aside(role='note') unit tests as design tool. BDD, UI tests, Persistence tests

      +slide('deming')
        h4 It is <span class='important'>not necessary</span> to change. <br/> <span class='important'>Survival</span> is <span class='important'>not mandatory</span>.
        h3 W. Edwards Deming
        aside(role='note') You can continue dooing manual tests

      +slide
        div.main-wrap
          div.leftbar
            h2.gothicfont(style='font-size:2em') Bartosz<br/>Majsak
            br
            h2.gothicfont.important(style='font-size:1em') Atos Consulting
            h2.gothicfont(style='font-size:1em') Code monkey
            h2.gothicfont.important(style='font-size:1em') @majson
          div.rightbar
            h2.gothicfont(style='font-size:2em') Aslak<br/>Knutsen
            br
            h2.gothicfont.important(style='font-size:1em') Red Hat
            h2.gothicfont(style='font-size:1em') Arquillian Lead
            h2.gothicfont.important(style='font-size:1em') @aslakknutsen

      +slide
        a(href='http://arquillian.org/', style='border:none')
          h2(style='font-size: .55em') arquillian.org
        a(href='http://discuss.arquillian.org/', style='border:none')
          h2(style='font-size: .55em') discuss.arquillian.org
        br
        a(href='https://github.com/aslakknutsen/docker-testing', style='border:none')
          h5(style='font-size: .55em') github.com/aslakknutsen/docker-testing
        br

        a(href='https://github.com/lordofthejars/pingpongQ', style='border:none')
          h5(style='font-size: .55em') github.com/lordofthejars/pingpongQ

        a(href='https://github.com/arquillian/arquillian-cube/tree/master/docker/ftest-docker-containerobject', style='border:none')
          h5(style='font-size: .55em') github.com/arquillian/arquillian-cube/tree/master/docker/ftest-docker-containerobject
        a(href='https://github.com/arquillian/arquillian-cube/tree/master/docker/ftest-docker-compose', style='border:none')
          h5(style='font-size: .55em') github.com/arquillian/arquillian-cube/tree/master/docker/ftest-docker-compose
        a(href='http://toxiproxy.io', style='border:none')
          h5(style='font-size: .55em') toxiproxy.io

    script(src='build/build.js')
